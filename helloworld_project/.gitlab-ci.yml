stages:
  - build
  - deploy

variables:
  IMAGE_NAME: "backend"
  IMAGE_TAG: "latest"
  DOCKER_TLS_CERTDIR: ""  # To disable docker-in-docker TLS warnings

# Define workflow rules to only run pipeline on production branch
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

.default_script:
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p $SSH_PORT $SERVER_IP >> ~/.ssh/known_hosts

build-image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG -f  helloworld_project/Dockerfile .
    - echo "Pushing Docker image..."
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

deploy-to-server:
  stage: deploy
  extends: .default_script
  environment:
    name: production
    url: http://$SERVER_IP:1234
  script:
    - echo "Deploying Docker container on server..."
    - ssh -p $SSH_PORT $SERVER_USER@$SERVER_IP "
        docker pull $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG &&
        docker stop $IMAGE_NAME || true &&
        docker rm $IMAGE_NAME || true &&
        docker run -d --name $IMAGE_NAME \
        -p 1234:8000 \
        $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
      "
